# ========================================
# PT站 Nginx 主配置文件
# ========================================
# 功能：支持HTTPS和HTTP，包含完整的PT站配置
# 维护：定期检查SSL证书、日志轮转、性能优化
# 更新：2025年9月9日 - 结构化重构

# ========================================
# 全局配置
# ========================================
worker_processes auto;
worker_rlimit_nofile 65535;

# 事件处理模型
events {
    worker_connections 4096;
    use select;  # Windows下推荐使用select
    multi_accept on;
}

# ========================================
# HTTP 主配置块
# ========================================
http {
    # ========================================
    # 基础配置和MIME类型
    # ========================================
    include       C:/nginx/conf/mime.types;
    default_type  application/octet-stream;
    charset       utf-8;
    
    # PT站专用日志格式（包含响应时间）
    log_format pt_combined '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'rt=$request_time uct="$upstream_connect_time" '
                          'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # ========================================
    # 性能优化配置
    # ========================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 客户端请求配置
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;
    
    # ========================================
    # Gzip压缩优化
    # ========================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # ========================================
    # 上游服务器配置
    # ========================================
    
    # 后端API服务器组
    upstream pt_backend {
        server 127.0.0.1:3001 max_fails=3 fail_timeout=30s weight=1;
        # 备用服务器（如需要可取消注释）
        # server 127.0.0.1:3002 max_fails=3 fail_timeout=30s weight=1 backup;
        
        # 连接池优化
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # 前端React开发服务器组
    upstream pt_frontend {
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s weight=1;
        
        # WebSocket支持的连接池
        keepalive 16;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # ========================================
    # 限流和安全配置
    # ========================================
    
    # API接口限流：每秒10个请求，突发20个
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Tracker限流：每秒2个请求，突发5个（PT核心功能）
    limit_req_zone $binary_remote_addr zone=tracker:10m rate=2r/s;
    
    # 通用页面限流：每秒5个请求，突发10个
    limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;
    
    # 文件上传限流：每秒1个请求，突发3个
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;
    
    # 文件下载限流：每秒20个请求，突发50个
    limit_req_zone $binary_remote_addr zone=download:10m rate=20r/s;
    
    # 连接数限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # ========================================
    # HTTP服务器配置（重定向到HTTPS）
    # ========================================
    
    # HTTP重定向服务器 - 域名访问
    server {
        listen 80;
        listen [::]:80;
        server_name pt.lan *.local GundamUnicorn.local;
        
        # 基础安全头（即使在HTTP也添加）
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        
        # 健康检查允许HTTP访问
        location = /health {
            limit_req zone=general burst=5 nodelay;
            proxy_pass http://pt_backend;
            access_log off;
        }
        
        # Let's Encrypt验证路径（如果使用）
        location ^~ /.well-known/acme-challenge/ {
            root C:/nginx/ssl/challenges/;
            allow all;
        }
        
        # 其他所有请求重定向到HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
        
        # HTTP访问日志
        access_log "C:/nginx/logs/pt_http_access.log" pt_combined;
        error_log "C:/nginx/logs/pt_http_error.log" warn;
    }
    
    # HTTP重定向服务器 - IP地址访问
    server {
        listen 80;
        listen [::]:80;
        server_name 172.21.80.250;  # 注意：此IP将由启动脚本动态更新
        
        # IP地址访问直接重定向到HTTPS
        return 301 https://$server_name$request_uri;
        
        # 重定向日志
        access_log "C:/nginx/logs/pt_http_redirect.log" pt_combined;
    }

    # ========================================
    # HTTPS主服务器配置
    # ========================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name pt.lan *.local 172.21.84.250 GundamUnicorn.local;  # 注意：IP将由启动脚本动态更新
        
        # ========================================
        # SSL/TLS安全配置
        # ========================================
        ssl_certificate C:/nginx/ssl/pt.lan.crt;
        ssl_certificate_key C:/nginx/ssl/pt.lan.key;
        
        # 现代SSL协议和加密套件
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;
        
        # SSL会话优化
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        ssl_buffer_size 4k;
        
        # ========================================
        # 安全头配置
        # ========================================
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # CSP策略（根据需要调整）
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: ws:;" always;
        
        # 包含站点特定配置
        include pt-site.conf;
        
        # 访问日志
        access_log "C:/nginx/logs/pt_access.log" pt_combined;
        error_log "C:/nginx/logs/pt_error.log" warn;
    }
}
