# PT站 Nginx 主配置文件 - 项目内生成 
# 生成时间: 周四 2025/08/28 21:05:54.19 
 
worker_processes auto; 
error_log "C:/nginx/logs/error.log"; 
pid "C:/nginx/logs/nginx.pid"; 
 
events { 
    worker_connections 1024; 
} 
 
http { 
    include       "C:/nginx/conf/mime.types"; 
    default_type  application/octet-stream; 
 
    # 日志格式 
    log_format main '$remote_addr - $remote_user [$time_local] "$request" ' 
                    '$status $body_bytes_sent "$http_referer" ' 
                    '"$http_user_agent" "$http_x_forwarded_for"'; 
 
    # 性能优化 
    sendfile on; 
    tcp_nopush on; 
    tcp_nodelay on; 
    keepalive_timeout 65; 
    types_hash_max_size 2048; 
 
    # 临时文件路径 
    client_body_temp_path "C:/nginx/temp/client_body_temp"; 
    proxy_temp_path "C:/nginx/temp/proxy_temp"; 
    fastcgi_temp_path "C:/nginx/temp/fastcgi_temp"; 
    uwsgi_temp_path "C:/nginx/temp/uwsgi_temp"; 
    scgi_temp_path "C:/nginx/temp/scgi_temp"; 
 
    # Gzip压缩 
    gzip on; 
    gzip_vary on; 
    gzip_min_length 1024; 
    gzip_proxied any; 
    gzip_comp_level 6; 
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/json 
        application/javascript 
        application/xml+rss 
        application/atom+xml 
        image/svg+xml; 
 
# PT站 Nginx 配置文件
# 适用于开发和生产环境

# 上游后端服务器配置
upstream pt_backend {
    server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
    # 如果有多个后端实例，可以添加更多服务器
    # server 127.0.0.1:3002 backup;
    keepalive 32;
}

# 限流配置 - 防止恶意请求
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=tracker:10m rate=2r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;

# HTTP服务器 - 可以重定向到HTTPS或直接使用
server {
    listen 80;
    server_name localhost your-domain.com;  # 修改为您的域名
    
    # 如果使用HTTPS，取消下面一行的注释
    # return 301 https://$server_name$request_uri;
    
    # 设置最大请求体大小（用于种子文件上传）
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 隐藏Nginx版本
    server_tokens off;
    
    # 静态测试文件处理
    location ~ ^/(test-.*\.html)$ {
        root C:/Users/qdsxh/Desktop/toys/pt;
        try_files $uri =404;
    }
    
    # 根路径 - 前端React应用
    location / {
        # 开发环境：代理到React开发服务器
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # React开发服务器超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 生产环境：取消下面的注释并注释掉上面的proxy_pass
        # root C:/Users/qdsxh/Desktop/toys/pt/frontend/build;  # 修改为您的实际路径
        # try_files $uri $uri/ /index.html;
        # 
        # # 静态资源缓存优化
        # location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        #     expires 1y;
        #     add_header Cache-Control "public, immutable";
        #     gzip_static on;
        # }
        # 
        # # HTML文件不缓存
        # location ~* \.html$ {
        #     expires 0;
        #     add_header Cache-Control "no-cache, no-store, must-revalidate";
        # }
    }
    
    # API路由代理
    location /api {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://pt_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # 超时设置
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
        
        # 错误处理
        proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Tracker服务 - PT站核心功能
    location ~ ^/(announce|tracker) {
        limit_req zone=tracker burst=5 nodelay;
        
        # 只允许BitTorrent客户端访问
        set $allowed_agent 0;
        if ($http_user_agent ~* "(BitTorrent|uTorrent|qBittorrent|Transmission|Deluge|rtorrent|libtorrent|Azureus|BitComet)") {
            set $allowed_agent 1;
        }
        # 开发环境允许浏览器访问测试
        if ($http_user_agent ~* "(Mozilla|Chrome|Safari|Firefox)") {
            set $allowed_agent 1;
        }
        if ($allowed_agent = 0) {
            return 403 "Access denied: Only BitTorrent clients allowed";
        }
        
        proxy_pass http://pt_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Tracker专用优化
        proxy_buffering off;
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;
        proxy_connect_timeout 5s;
        
        # 缓存Tracker响应（可选）
        # proxy_cache_bypass $arg_event $arg_compact;
        # proxy_cache_valid 200 1m;
    }
    
    # 文件上传代理（特殊处理大文件）
    location /api/torrents/upload {
        limit_req zone=upload burst=3 nodelay;
        
        # 大文件上传优化
        client_max_body_size 100M;
        client_body_buffer_size 128k;
        client_body_timeout 300s;
        
        proxy_pass http://pt_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 上传超时设置
        proxy_connect_timeout 10s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 禁用代理缓冲，支持大文件上传
        proxy_request_buffering off;
        proxy_buffering off;
    }
    
    # 文件下载服务
    location /uploads {
        # 直接由Nginx服务上传的文件
        alias C:/Users/qdsxh/Desktop/toys/pt/backend/uploads/;  # 修改为您的实际路径
        
        # 文件下载优化
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        
        # 种子文件和图片缓存
        location ~* \.(torrent|jpg|jpeg|png|gif)$ {
            expires 7d;
            add_header Cache-Control "public, no-transform";
        }
        
        # 访问日志（可选关闭以提高性能）
        access_log off;
    }
    
    # 健康检查
    location /health {
        proxy_pass http://pt_backend;
        access_log off;
        
        # 健康检查超时
        proxy_connect_timeout 3s;
        proxy_send_timeout 3s;
        proxy_read_timeout 3s;
    }
    
    # 管理员API特殊限制
    location /api/admin {
        limit_req zone=api burst=5 nodelay;
        
        # 可以添加IP白名单
        # allow 192.168.1.0/24;
        # deny all;
        
        proxy_pass http://pt_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 阻止访问敏感文件
    location ~ /\.(env|git|sql|log)$ {
        deny all;
        return 404;
    }
    
    # 阻止访问node_modules等目录
    location ~ /(node_modules|\.git|database\.sqlite|backend|src) {
        deny all;
        return 404;
    }
    
    # 机器人和爬虫管理
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\nDisallow: /tracker/\nDisallow: /announce\n";
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        add_header Content-Type text/html;
        return 200 '<!DOCTYPE html><html><head><title>PT站服务暂时不可用</title></head><body><h1>服务暂时不可用</h1><p>请稍后再试</p></body></html>';
    }
    
    location = /404.html {
        add_header Content-Type text/html;
        return 404 '<!DOCTYPE html><html><head><title>页面未找到</title></head><body><h1>页面未找到</h1><p><a href="/">返回首页</a></p></body></html>';
    }
    
    # 访问日志
    access_log "C:/nginx/logs/pt_access.log" combined;
    error_log "C:/nginx/logs/pt_error.log" warn;
}

# HTTPS配置（生产环境推荐）
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     # SSL证书配置
#     ssl_certificate /path/to/your/cert.pem;
#     ssl_certificate_key /path/to/your/private.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS安全头
#     add_header Strict-Transport-Security "max-age=31536000" always;
#     
#     # 复制上面server块中的location配置...
# }
} 
