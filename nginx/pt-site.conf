# PT站点HTTPS配置
# 这个配置文件被nginx.conf包含，用于定义站点特定的路由和设置

# 静态测试文件处理
location ~ ^/(test-.*\.html)$ {
    root C:/Users/qdsxh/Desktop/toys/pt;
    try_files $uri =404;
}

# 根路径 - 前端React应用
location / {
    # 开发环境：代理到React开发服务器
    proxy_pass http://172.21.174.6:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # React开发服务器超时设置
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# API路由代理
location /api {
    limit_req zone=api burst=20 nodelay;
    
    proxy_pass http://pt_backend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    
    # 超时设置
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # 缓冲设置
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 16 8k;
    proxy_busy_buffers_size 16k;
    
    # 错误处理
    proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;
}

# Tracker服务 - PT站核心功能
location ~ ^/(announce|tracker) {
    limit_req zone=tracker burst=5 nodelay;
    
    # 只允许BitTorrent客户端访问
    set $allowed_agent 0;
    if ($http_user_agent ~* "(BitTorrent|uTorrent|qBittorrent|Transmission|Deluge|rtorrent|libtorrent|Azureus|BitComet)") {
        set $allowed_agent 1;
    }
    # 开发环境允许浏览器访问测试
    if ($http_user_agent ~* "(Mozilla|Chrome|Safari|Firefox)") {
        set $allowed_agent 1;
    }
    if ($allowed_agent = 0) {
        return 403 "Access denied: Only BitTorrent clients allowed";
    }
    
    proxy_pass http://pt_backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Tracker专用优化
    proxy_buffering off;
    proxy_read_timeout 30s;
    proxy_send_timeout 30s;
    proxy_connect_timeout 5s;
}

# 文件上传代理（特殊处理大文件）
location /api/torrents/upload {
    limit_req zone=upload burst=3 nodelay;
    
    # 大文件上传优化
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_body_timeout 300s;
    
    proxy_pass http://pt_backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # 上传超时设置
    proxy_connect_timeout 10s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # 禁用代理缓冲，支持大文件上传
    proxy_request_buffering off;
    proxy_buffering off;
}

# 文件下载服务
location /uploads {
    # 直接由Nginx服务上传的文件
    alias C:/Users/qdsxh/Desktop/toys/pt/backend/uploads/;
    
    # 文件下载优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # 种子文件和图片缓存
    location ~* \.(torrent|jpg|jpeg|png|gif)$ {
        expires 7d;
        add_header Cache-Control "public, no-transform";
    }
    
    # 访问日志（可选关闭以提高性能）
    access_log off;
}

# 健康检查
location /health {
    proxy_pass http://pt_backend;
    access_log off;
    
    # 健康检查超时
    proxy_connect_timeout 3s;
    proxy_send_timeout 3s;
    proxy_read_timeout 3s;
}

# 管理员API特殊限制
location /api/admin {
    limit_req zone=api burst=5 nodelay;
    
    proxy_pass http://pt_backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# 阻止访问敏感文件
location ~ /\.(env|git|sql|log)$ {
    deny all;
    return 404;
}

# 阻止访问node_modules等目录
location ~ /(node_modules|\.git|database\.sqlite|backend|src) {
    deny all;
    return 404;
}

# 机器人和爬虫管理
location /robots.txt {
    add_header Content-Type text/plain;
    return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\nDisallow: /tracker/\nDisallow: /announce\n";
}

# 错误页面
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;

location = /50x.html {
    add_header Content-Type text/html;
    return 200 '<!DOCTYPE html><html><head><title>PT站服务暂时不可用</title></head><body><h1>服务暂时不可用</h1><p>请稍后再试</p></body></html>';
}

location = /404.html {
    add_header Content-Type text/html;
    return 404 '<!DOCTYPE html><html><head><title>页面未找到</title></head><body><h1>页面未找到</h1><p><a href="/">返回首页</a></p></body></html>';
}
